//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;

namespace {{NamespaceName}} {

    {{~ for kvp in DictNameField_Methods ~}}
      {{~ for mi in kvp.Value ~}}
          {{ if mi.NrParameters > 1 }}
    public record rec{{ClassName}}_{{kvp.Key}}_{{mi.Name}}_{{for.index}}_{{mi.HashCodeParams}} ({{mi.parametersDefinitionCSharp }});
          {{ end }}
      {{~ end ~}}
      
    {{~ end ~}}

    /// <summary>
    /// Generates code from  {{ClassName}}
    /// </summary>
  [CompilerGenerated]
  [GeneratedCode("SkinnyControllersGenerator", "{{version}}")]
  partial class {{ClassName}}{ 
    /*
    [HttpGet()]
    public int id(){
    System.Diagnostics.Debugger.Break();
    return 1;
    } 
    */
    {{~ for kvp in DictNameField_Methods ~}}
      {{~ for mi in kvp.Value ~}}
         {{
            method = "[HttpPost]" 
            argumentFunction=""
            argumentCall = ""
            returnVerb =""
            if mi.ReturnsVoid == false
                returnVerb  ="return "
            end
            case mi.NrParameters 
                when 0
                    method = "[HttpGet]"
                    argumentCall =""
                when 1
                    argumentFunction = mi.FirstParameter.Value +" "+ mi.FirstParameter.Key  
                    argumentCall =mi.FirstParameter.Key  
                else
                    argumentFunction = "rec"+ ClassName+"_"+ kvp.Key+"_" +mi.Name+ "_"+for.index+ "_"+mi.HashCodeParams + " data"
                    argumentCall = mi.parametersCallWithRecord 
           end
         }}

        {{method}}
        public {{mi.ReturnType}} {{mi.Name}}( {{argumentFunction}} ){
            {{returnVerb}} {{kvp.Key}}.{{mi.Name}}({{ argumentCall  }});

        }
      {{~ end ~}}
      
    {{~ end ~}}    
  }
}              